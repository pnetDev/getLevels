#!/usr/bin/python

## CM Testing SNMP code

import sys,time
from easysnmp import snmp_get, snmp_set, snmp_walk

cmIP = sys.argv[1]
cmts = sys.argv[2]

## Levels Oids

mac=".1.3.6.1.2.1.2.2.1.6.2"
dfq=".1.3.6.1.2.1.10.127.1.1.1.1.2.3"
ufq=".1.3.6.1.2.1.10.127.1.1.2.1.2.4"
dsp=".1.3.6.1.2.1.10.127.1.1.1.1.6.3"
snr=".1.3.6.1.2.1.10.127.1.1.4.1.5.3"
txp=".1.3.6.1.2.1.10.127.1.2.2.1.3.2"
unr=".1.3.6.1.2.1.10.127.1.1.4.1.2.3"
cor=".1.3.6.1.2.1.10.127.1.1.4.1.3.3"
unc=".1.3.6.1.2.1.10.127.1.1.4.1.4.3"


def getOid(oid):
	try:
		snmpData = snmp_get(oid, hostname=cmIP, community='private', version=2)
		return snmpData.value
	except:
		return "readError"

def getUpstreamErrors(mac,cmts):
        ## This function will:
        ## Convert the MAC into dotted decimal
        ## Get the CM index by polling the CMTS
        ## Get the Upstream Error counter by polling the CMTS
        ## Oids
	#print "Now getting US INFO"
        cmIndex = ".1.3.6.1.2.1.10.127.1.3.7.1.2"   ## Append the dotted decimal mac to the string to get the value
        upHec = ".1.3.6.1.2.1.10.127.1.3.3.1.12."   ## Append the cmIndex to the string to get the value
        #print "Converting", mac ,"to decimal"    ## Easy to convert hex in Python. result = int("0xff", 16)
        mac = mac.split(':')

        ## Need to convert each hextet to decimal and then build the dotted decimal result. Might be a better way to do this, can't find a function.
	## Break up the MAC address into hextets H stands for Hextet
        macH0 = mac[0]
        macH1 = mac[1]
        macH2 = mac[2]
        macH3 = mac[3]
        macH4 = mac[4]
        macH5 = mac[5]

	## Convert each hextet to decimal
        dec0 = int(macH0, 16)
        dec1 = int(macH1, 16)
        dec2 = int(macH2, 16)
        dec3 = int(macH3, 16)
        dec4 = int(macH4, 16)
        dec5 = int(macH5, 16)

        #print dec0, dec1, dec2, dec3, dec4, dec5
	macDottedDecimal = "." + str(dec0) + "." + str(dec1) + "." + str(dec2) + "." + str(dec3) + "." + str(dec4) + "." + str(dec5)
	#print macDottedDecimal
	cmIndex = ".1.3.6.1.2.1.10.127.1.3.7.1.2" + macDottedDecimal
	cmIndexData = snmp_get(cmIndex,hostname=cmts, community='private', version=2)
	cmIndexData = cmIndexData.value
	cmUsErrors = ".1.3.6.1.2.1.10.127.1.3.3.1.12." + str(cmIndexData)
	cmUsErrorsData = snmp_get(cmUsErrors,hostname=cmts, community='private', version=2)
	return cmUsErrorsData.value


##-------------------------------------------------------------------------------##
# Main

mac = snmp_get('.1.3.6.1.2.1.2.2.1.6.2.', hostname=cmIP, community='private', version=2)
mac = ':'.join('{:02x}'.format(ord(x)) for x in mac.value)  ## This nifty code presents the MAC in readable format

dsFreq = getOid(dfq)
usFreq = getOid(ufq)
DSP = getOid(dsp)
SNR = getOid(snr)
TXP = getOid(txp)
UNR = getOid(unr)
COR = getOid(cor)
UNC = getOid(unc)
UsErrors = getUpstreamErrors(mac,cmts)

print "MAC",mac, cmIP, "DSFREQ:", dsFreq, "USFREQ:", usFreq, "PWR:", DSP, "SNR:", SNR, "TX PWR:", TXP, "Packets:",UNR, "Corrected:", COR, "Down Uncorrected:", UNC, "Up Uncorrected:", UsErrors

## End
